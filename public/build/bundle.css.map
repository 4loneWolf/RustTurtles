{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Nav.svelte",
    "Clock.svelte",
    "Route.svelte",
    "Router.svelte"
  ],
  "sourcesContent": [
    "<script>\n\t// export let name;\n\timport Nav from './Nav.svelte';\n\timport Footer from './Footer.svelte';\n\timport {Router, Route} from 'yrv';\n\timport Home from './pages/Home.svelte';\n\timport About from './pages/About.svelte';\n\timport Common from './pages/Common.svelte';\n\timport Catcher from './pages/Catcher.svelte';\n\timport Login from './pages/Login.svelte';\n\timport Logout from './pages/Logout.svelte';\n\timport Secure from './pages/Secure.svelte';\n\timport Clock from './pages/Clock.svelte';\n\timport { user } from './store.js';\n\timport { onMount } from 'svelte';\n\tonMount( async() => {\n        const res = await fetch('/api/checkuser',{credentials: 'same-origin'});\n        let stateResponse = await res.json();\n        if (stateResponse.user_id !== '_') {\n            user.set(stateResponse.user_id);\n\t\t}else \n\t\t{\n\t\t\tuser.set('');\n\t\t}\n    });\n</script>\n\n<style>\n\t:global(div) {\n\t\tbackground-color: rgb(23, 23, 23);\n\t}\n</style>\n\n<main>\n  <Nav></Nav>\n  <Router>\n    <Route exact path=\"/\"><Home></Home></Route>\n    <Route path=\"#about\"><About></About></Route>\n\t<Route path=\"#app/common\" let:router><Common></Common></Route>\n\t<Route path=\"#:name\" let:router><Catcher></Catcher></Route> \n\t<Route exact path=\"#login\"><Login></Login></Route>\n\t<Route exact path=\"#logout\"><Logout></Logout></Route>\n\t<Route exact path=\"#secure\"><Secure></Secure></Route>\n\t<Route exact path=\"#clock\"><Clock></Clock></Route>\n  </Router> \n  <Footer></Footer>\n</main>",
    "<!-- <a href=\"https://github.com/sachinbhutani/svelte-on-rust\"> !-->\n<script>\n    import {user} from './store.js';\n    import {Link} from 'yrv';\n  import { loop_guard } from 'svelte/internal';\n\n    let isActive = false;\n    function toggleMenu(){\n        isActive = !isActive;\n    }\n\n    function fetchi() {\n        fetch(\"/turtle/movement\", {\n              method: 'POST',\n              body: JSON.stringify({name: \"Zeus\"})\n            })\n    }\n</script>\n\n<style>\n\t:global([aria-current]) { font-weight: bold;}\n\n    :global(a) {\n        float: left;\n    }\n    \n    .login {\n        float: right;\n    }\n\n    :global(a) {\n        display: block;\n        color: white;\n        text-align: center;\n        padding: 13px 15px;\n        text-decoration: none;\n    }\n\n    :global(a):hover {\n        background-color: rgb(67, 185, 166);\n        color: white;\n    }\n    \n    nav {\n        margin: 0;\n        padding: 0;\n        background-color:rgb(31, 39, 45);\n    }\n\n    .dropdown {\n        position: relative;\n        display: inline-block;\n    }\n\n    .dropdown:hover .dropbtn {\n        background-color: rgb(67, 185, 166);\n    }\n\n    .dropbtn {\n        background-color: rgb(31, 39, 45);\n        color: white;\n        padding: 16px;\n        font-size: 16px;\n        border: none;\n        cursor: pointer;\n    }\n\n    /* The container <div> - needed to position the dropdown content */\n    .dropdown {\n        position: relative;\n        display: inline-block;\n    }\n\n    /* Dropdown Content (Hidden by Default) */\n    .dropdown-content {\n        display: none;\n        position: absolute;\n        background-color: #f9f9f9;\n        min-width: 162px;\n        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n        z-index: 1;\n    }\n\n    /* Links inside the dropdown */\n    .dropdown-content a {\n        margin-left: 6px;\n        color: rgb(19, 18, 18);\n        padding: 12px 16px;\n        text-decoration: none;\n        display: block;\n    }\n\n    /* Change color of dropdown links on hover */\n    .dropdown-content a:hover {background-color: #f1f1f1}\n\n    /* Show the dropdown menu on hover */\n    .dropdown:hover .dropdown-content {\n        display: block;\n    }\n</style>\n\n<!-- svelte-ignore a11y-no-redundant-roles -->\n<nav>\n    <div>\n        <div>\n        <Link href=\"/\"> Home </Link>\n        <Link href=\"#about\"> Svelte Route </Link>\n            <div class=\"dropdown\">\n                <button class=\"dropbtn\">\n                Server Routes\n                </button>\n                <div class=\"dropdown-content\">\n                    <a href=\"/api\">\n                        String\n                    </a>\n                    <a href=\"/api/message\">\n                        JSON\n                    </a>\n                </div>\n            </div>\n        <Link href=\"#app/common?p1=test&p2=3\"> Common Route </Link>\n        {#if $user} <Link href=\"#secure\"> Secure Route </Link>{/if}\n        <Link href=\"#catch-it\"> Catch All </Link>\n        {#if $user} <Link href=\"#clock\"> Clock </Link> {/if}\n        <button id=\"turtles\" onclick='window.location.href=\"turtles.html\"'>Connect to turtles</button>\n        {#if !$user}\n            <div class=\"login\">\n                <Link href=\"#login\">\n                    Log in\n                </Link>\n            </div>\n        {:else}\n            <div class=\"login\">\n                <Link href=\"#logout\">\n                    Log Out\n                </Link>\n            </div>\n        {/if}\n        </div>\n    </div>\n</nav>\n",
    "<script>\r\n\r\n    import { readable } from 'svelte/store'\r\n\r\n    const time = readable(null, function start(set) {\r\n        const interval = setInterval(() => {\r\n            set(new Date());\r\n        }, 1000);\r\n\r\n        return function stop() {\r\n            clearInterval(interval)\r\n        }\r\n    });\r\n\r\n    const formatter = new Intl.DateTimeFormat('en', {\r\n            hour12: false,\r\n            hour: 'numeric',\r\n            minute: '2-digit',\r\n            second: '2-digit'\r\n        });\r\n</script>\r\n\r\n<h1>Current time: {formatter.format($time)}</h1>\r\n\r\n<style>\r\n    h1 {\r\n        text-align: center;\r\n        position: static;\r\n        margin-top: 100px;\r\n        margin-bottom: 100px;\r\n        font-size: 40px;\r\n    }\r\n</style>",
    "<script context=\"module\">\n  import { writable } from 'svelte/store';\n  import { routeInfo } from './router';\n  import { CTX_ROUTER, CTX_ROUTE } from './utils';\n\n  function getProps(given, required) {\n    const { props: sub, ...others } = given;\n\n    // prune all declared props from this component\n    required = !Array.isArray(required)\n      ? Object.keys(required)\n      : required;\n\n    required.forEach(k => {\n      delete others[k];\n    });\n\n    return {\n      ...sub,\n      ...others,\n    };\n  }\n</script>\n\n<script>\n  import { onDestroy, getContext, setContext } from 'svelte';\n\n  export let key = null;\n  export let path = '/';\n  export let exact = null;\n  export let disabled = false;\n  export let fallback = null;\n  export let component = null;\n  export let condition = null;\n  export let redirect = null;\n\n  const routeContext = getContext(CTX_ROUTE);\n  const routerContext = getContext(CTX_ROUTER);\n\n  const { assignRoute, unassignRoute } = routerContext || {};\n\n  const routePath = routeContext ? routeContext.routePath : writable(path);\n\n  let activeRouter = null;\n  let activeProps = {};\n  let fullpath;\n  let failure;\n\n  const fixedRoot = $routePath !== path && $routePath !== '/'\n    ? `${$routePath}${path !== '/' ? path : ''}`\n    : path;\n\n  try {\n    if (redirect !== null && !/^(?:\\w+:\\/\\/|\\/)/.test(redirect)) {\n      throw new TypeError(`Expecting valid URL to redirect, given '${redirect}'`);\n    }\n\n    if (condition !== null && typeof condition !== 'function') {\n      throw new TypeError(`Expecting condition to be a function, given '${condition}'`);\n    }\n\n    if (path.charAt() !== '#' && path.charAt() !== '/') {\n      throw new TypeError(`Expecting a leading slash or hash, given '${path}'`);\n    }\n\n    if (!assignRoute) {\n      throw new TypeError(`Missing top-level <Router>, given route: ${path}`);\n    }\n\n    [key, fullpath] = assignRoute(key, fixedRoot, {\n      condition, redirect, fallback, exact,\n    });\n  } catch (e) {\n    failure = e;\n  }\n\n  $: if (key) {\n    /* global arguments */\n    activeRouter = !disabled && $routeInfo[key];\n    activeProps = getProps($$props, arguments[0].$$.props);\n  }\n\n  onDestroy(() => {\n    if (unassignRoute) {\n      unassignRoute(fullpath);\n    }\n  });\n\n  setContext(CTX_ROUTE, {\n    routePath,\n  });\n</script>\n\n<style>\n  [data-failure] {\n    color: red;\n  }\n</style>\n\n{#if failure}\n  <p data-failure>{failure}</p>\n{/if}\n\n{#if activeRouter}\n  {#if component}\n    <svelte:component this={component} router={activeRouter} {...activeProps} />\n  {:else}\n    <slot router={activeRouter} props={activeProps} />\n  {/if}\n{/if}\n",
    "<script context=\"module\">\n  import { writable } from 'svelte/store';\n  import { CTX_ROUTER, router } from './utils';\n  import {\n    baseRouter, addRouter, findRoutes, doFallback,\n  } from './router';\n</script>\n\n<script>\n  import {\n    onMount, onDestroy, getContext, setContext,\n  } from 'svelte';\n\n  let cleanup;\n  let failure;\n  let fallback;\n\n  export let path = '/';\n  export let disabled = false;\n  export let condition = null;\n  export let nofallback = false;\n\n  const routerContext = getContext(CTX_ROUTER);\n  const basePath = routerContext ? routerContext.basePath : writable(path);\n\n  const fixedRoot = $basePath !== path && $basePath !== '/'\n    ? `${$basePath}${path !== '/' ? path : ''}`\n    : path;\n\n  try {\n    if (condition !== null && typeof condition !== 'function') {\n      throw new TypeError(`Expecting condition to be a function, given '${condition}'`);\n    }\n\n    if (path.charAt() !== '#' && path.charAt() !== '/') {\n      throw new TypeError(`Expecting a leading slash or hash, given '${path}'`);\n    }\n  } catch (e) {\n    failure = e;\n  }\n\n  function assignRoute(key, route, detail) {\n    key = key || Math.random().toString(36).substr(2);\n\n    // consider as nested routes if they does not have any segment\n    const nested = !route.substr(1).includes('/');\n    const handler = { key, nested, ...detail };\n\n    let fullpath;\n\n    baseRouter.mount(fixedRoot, () => {\n      fullpath = baseRouter.add(route, handler);\n      fallback = (handler.fallback && key) || fallback;\n    });\n\n    findRoutes();\n\n    return [key, fullpath];\n  }\n\n  function unassignRoute(route) {\n    baseRouter.rm(route);\n    findRoutes();\n  }\n\n  function onError(err) {\n    failure = err;\n\n    if (failure && fallback) {\n      doFallback(failure, fallback);\n    }\n  }\n\n  onMount(() => {\n    cleanup = addRouter(fixedRoot, fallback, onError);\n  });\n\n  onDestroy(() => {\n    if (cleanup) cleanup();\n  });\n\n  setContext(CTX_ROUTER, {\n    basePath,\n    assignRoute,\n    unassignRoute,\n  });\n\n  $: if (condition) {\n    disabled = !condition($router);\n  }\n</script>\n\n<style>\n  [data-failure] {\n    border: 1px dashed silver;\n  }\n</style>\n\n{#if !disabled}\n  <slot />\n{/if}\n\n{#if failure && !fallback && !nofallback}\n  <fieldset data-failure>\n    <legend>Router failure: {path}</legend>\n    <pre>{failure}</pre>\n  </fieldset>\n{/if}\n"
  ],
  "names": [],
  "mappings": "AA4BS,GAAG,AAAE,CAAC,AACb,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,AAClC,CAAC;ACVO,cAAc,AAAE,CAAC,AAAC,WAAW,CAAE,IAAI,AAAC,CAAC,AAElC,CAAC,AAAE,CAAC,AACR,KAAK,CAAE,IAAI,AACf,CAAC,AAED,MAAM,4BAAC,CAAC,AACJ,KAAK,CAAE,KAAK,AAChB,CAAC,AAEO,CAAC,AAAE,CAAC,AACR,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,eAAe,CAAE,IAAI,AACzB,CAAC,AAEO,CAAC,AAAC,MAAM,AAAC,CAAC,AACd,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACnC,KAAK,CAAE,KAAK,AAChB,CAAC,AAED,GAAG,4BAAC,CAAC,AACD,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,iBAAiB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,AACpC,CAAC,AAED,SAAS,4BAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,YAAY,AACzB,CAAC,AAED,uBAAS,MAAM,CAAC,QAAQ,cAAC,CAAC,AACtB,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACvC,CAAC,AAED,QAAQ,4BAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CACjC,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,AACnB,CAAC,AAGD,SAAS,4BAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,YAAY,AACzB,CAAC,AAGD,iBAAiB,4BAAC,CAAC,AACf,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,QAAQ,CAClB,gBAAgB,CAAE,OAAO,CACzB,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC5C,OAAO,CAAE,CAAC,AACd,CAAC,AAGD,+BAAiB,CAAC,CAAC,cAAC,CAAC,AACjB,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CACtB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,KAAK,AAClB,CAAC,AAGD,+BAAiB,CAAC,eAAC,MAAM,AAAC,CAAC,gBAAgB,CAAE,OAAO,CAAC,AAGrD,uBAAS,MAAM,CAAC,iBAAiB,cAAC,CAAC,AAC/B,OAAO,CAAE,KAAK,AAClB,CAAC;ACzED,EAAE,eAAC,CAAC,AACA,UAAU,CAAE,MAAM,CAClB,QAAQ,CAAE,MAAM,CAChB,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,KAAK,CACpB,SAAS,CAAE,IAAI,AACnB,CAAC;AC+DH,CAAC,YAAY,CAAC,cAAC,CAAC,AACd,KAAK,CAAE,GAAG,AACZ,CAAC;ACHD,CAAC,YAAY,CAAC,cAAC,CAAC,AACd,MAAM,CAAE,GAAG,CAAC,MAAM,CAAC,MAAM,AAC3B,CAAC"
}